import React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import { Circle } from "rc-progress";
import useLocalStorage from "use-local-storage";
import Header from "./components/Header";
import { useProvider } from "../Context/UIContext";
import "react-circular-progressbar/dist";
import Link from "next/link";
import { ArrowRightCircleIcon } from "@heroicons/react/24/outline";

const Result = () => {
  const [x, setX] = useLocalStorage("Mode", false);

  const router = useRouter();
  const { totalWeight } = router.query;

  console.log("Total Weight : " + totalWeight);

  let weighPer = Math.ceil((totalWeight * 100) / 33);
  // console.log("Total % : " + weighPer);

  const calcColor = (weighPer, start, end) => {
    let a = weighPer / 100,
      b = (end - start) * a,
      c = b + start;

    return "hsl(" + c + ", 100%, 50%)";
  };
  const toggleTheme = () => {
    setX(!x);
  };
  return (
    <>
      <div
        className={`${
          x ? "dark" : ""
        } overflow-x-none  w-full h-screen dark:bg-gray-900 scrollbar-thin scrollbar-thumb-[#FF5A5F] scrollbar-track-gray-500 overflow-y-scroll `}
      >
        <Head>
          <title>Result</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/fav.png" />
        </Head>
        <Header onDarkToggle={toggleTheme} />

        <div className="flex flex-col items-center justify-center dark:bg-gray-800 h-screen ">
          <div className="relative md:text-xl text-black dark:text-white text-center">
            As per{" "}
            <span className="font-bold ">Geriatric Depression Scale</span>
          </div>
          <div className="flex flex-col md:flex-row max-h-screen  text-center top-4 relative items-center justify-center  ">
            {/* <CircularProgressbar
              value={weighPer}
              text={`${weighPer}`}
              circleRatio={0.7}
              styles={{
                trail:{
                  strokeLinecap: "butt",
                  transform:"rotate(-126deg)",
                  transformOrigin: "center center",
                },
                path:{
                  strokeLinecap: "butt",
                  transform:"rotate(-126deg)",
                  transformOrigin: "center center",
                  stroke: calcColor(weighPer, 0,120),
                },
                text:{
                  fill: "#ddd"
                }
              }}
              strokeWidth={10}
            /> */}
            <Circle
              percent={weighPer}
              strokeColor="#FF5A5F"
              strokeWidth={4}
              trailWidth={4}
              trailColor="#6b7280"
              strokeLinecap="square"
              gapDegree={20}
              gapPosition="top"
              className="h-[200px] w-[200px] items-center justify-center relative sm:w-[300px] sm:h-[300px] md:w-[400px] md:h-[400px] xl:w-[450px] xl:h-[450px]"
            />
            <div className="absolute font-extrabold text-[#FF5A5F]  text-4xl sm:text-5xl md:text-6xl xl:text-7xl ">
              {weighPer} %
            </div>
          </div>
        </div>
        <div className="relative text-black dark:text-white  flex items-center justify-center ">
          {weighPer < 33 ? (
            <p className="text-black font-bold text-xl ">Congratulations, You&apos;re Successfully Fit !!</p>
          ) : weighPer >= 33 && weighPer <= 63 ? (
            // <p>Recommedation Need</p>
            <Link
              href={{
                pathname: "/recommed",
              }}
              as="/recommed"
            >
              <button className="bg-[#FF5A5F] font-bold flex justify-between py-3 px-6 text-white rounded-lg shadow-sm hover:shadow-xl active:scale-90 transition duration-150 ">
                Recommedation Need
                <ArrowRightCircleIcon className="pl-1 h-6 items-center text-white" />
              </button>
            </Link>
          ) : (
            <p className="text-red-600 font-bold">You&apos;re at the extreme Stage, Need a Doctor</p>
          )}
        </div>
      </div>
    </>
  );
};

export default Result;
